services:
  ui:
    image: acuvity/acuvity-chatbot-ui:latest
    ports:
      - "3000:3000"
    depends_on:
      - agent
    env_file:
      - .env
    environment:
      - REACT_APP_API_SERVER_BASE_URL=http://127.0.0.1:8000/api/v1/chat
      - REACT_APP_DESCOPE_PROJECT_ID=${DESCOPE_PROJECT_ID}
    restart: always

  agent:
    image: acuvity/acuvity-chatbot-agent:latest
    ports:
      - "8000:8000"
    volumes:
      - ./configs:/config
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    environment:
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - AGENTIC_CONFIG_PATH=/config/fastagent.config.yaml
      - DESCOPE_PROJECT_ID=${DESCOPE_PROJECT_ID}
    restart: always

  db:
    image: postgres:15-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always

  mcp-server-fetch:
    image: acuvity/mcp-server-fetch:latest
    environment:
      - MINIBRIDGE_LOG_LEVEL=debug
    restart: always

  mcp-server-brave-search:
    image: acuvity/mcp-server-brave-search:latest
    env_file:
      - .env
    environment:
      - BRAVE_API_KEY=${BRAVE_API_KEY}
      - MINIBRIDGE_LOG_LEVEL=debug
    restart: always

  mcp-server-github:
    image: acuvity/mcp-server-github:latest
    env_file:
      - .env
    environment:
      - GITHUB_PERSONAL_ACCESS_TOKEN=${GITHUB_PERSONAL_ACCESS_TOKEN}
      - MINIBRIDGE_LOG_LEVEL=debug
    restart: always

  mcp-server-sequential-thinking:
    image: acuvity/mcp-server-sequential-thinking:latest
    environment:
      - MINIBRIDGE_LOG_LEVEL=debug
    restart: always

  mcp-server-memory:
    image: acuvity/mcp-server-memory:latest
    environment:
      - MINIBRIDGE_LOG_LEVEL=debug
    volumes:
      - memory_data:/data
    restart: always

volumes:
  postgres_data:
  memory_data:
