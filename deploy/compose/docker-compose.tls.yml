services:
  ui:
    volumes:
      - ../../certs/ca-root-cert.pem:/certs/ca-root-cert.pem
    depends_on:
      - agent
    env_file:
      - .env
    environment:
      - REACT_APP_API_SERVER_BASE_URL=https://127.0.0.1:8000/api/v1/chat
      - NODE_EXTRA_CA_CERTS=/certs/ca-root-cert.pem
    restart: always

  agent:
    env_file:
      - .env
    environment:
      AGENT_TLS_SERVER_ENABLE: true
      AGENT_TLS_SERVER_CERT: /certs/mcp-chatbot-agent-cert.pem
      AGENT_TLS_SERVER_KEY: /certs/mcp-chatbot-agent-key.pem
      AGENT_CONFIG_YAML: |
        # FastAgent Configuration File
        # Default Model Configuration:
        #
        # Takes format:
        #   <provider>.<model_string>.<reasoning_effort?> (e.g. anthropic.claude-3-5-sonnet-20241022 or openai.o3-mini.low)
        # Accepts aliases for Anthropic Models: haiku, haiku3, sonnet, sonnet35, opus, opus3
        # and OpenAI Models: gpt-4o-mini, gpt-4o, o1, o1-mini, o3-mini
        #
        # If not specified, defaults to "haiku".
        # Can be overriden with a command line switch --model=<model>, or within the Agent constructor.

        default_model: haiku

        Logging and Console Configuration:
        logger:
          level: "info"
          type: "console"
          progress_display: false
          show_chat: true
          show_tools: true
          otel:
            enabled: false
            console_debug: false

        # MCP Servers
        mcp:
          servers: # NOTE: Use underscores instead of hyphens for server names
            server_fetch:
                transport: "sse"
                url: "https://mcp-server-fetch:8000/sse"
                read_timeout_seconds: 65534
                read_transport_sse_timeout_seconds: 65534
            server_brave_search:
                transport: "sse"
                url: "https://mcp-server-brave-search:8000/sse"
                read_timeout_seconds: 65534
                read_transport_sse_timeout_seconds: 65534
            server_sequential_thinking:
                transport: "sse"
                url: "https://mcp-server-sequential-thinking:8000/sse"
                read_timeout_seconds: 65534
                read_transport_sse_timeout_seconds: 65534
            server_memory:
                transport: "sse"
                url: "https://mcp-server-memory:8000/sse"
                read_timeout_seconds: 65534
                read_transport_sse_timeout_seconds: 65534
    restart: always

  db:

  mcp-server-fetch:
    env_file:
      - .env
    volumes:
      - ../../certs:/certs
    environment:
      - MINIBRIDGE_TLS_SERVER_CERT=/certs/mcp-server-fetch-cert.pem
      - MINIBRIDGE_TLS_SERVER_KEY=/certs/mcp-server-fetch-key.pem
    restart: always

  mcp-server-brave-search:
    volumes:
      - ../../certs:/certs
    env_file:
      - .env
    environment:
      - MINIBRIDGE_TLS_SERVER_CERT=/certs/mcp-server-brave-search-cert.pem
      - MINIBRIDGE_TLS_SERVER_KEY=/certs/mcp-server-brave-search-key.pem
    restart: always

  mcp-server-sequential-thinking:
    volumes:
      - ../../certs:/certs
    env_file:
      - .env
    environment:
      - MINIBRIDGE_TLS_SERVER_CERT=/certs/mcp-server-sequential-thinking-cert.pem
      - MINIBRIDGE_TLS_SERVER_KEY=/certs/mcp-server-sequential-thinking-key.pem
    restart: always

  mcp-server-memory:
    volumes:
      - ../../certs:/certs
    env_file:
      - .env
    environment:
      - MINIBRIDGE_TLS_SERVER_CERT=/certs/mcp-server-memory-cert.pem
      - MINIBRIDGE_TLS_SERVER_KEY=/certs/mcp-server-memory-key.pem
    restart: always

volumes:
  postgres_data:
  memory_data:





